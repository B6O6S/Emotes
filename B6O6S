--- Keybind to open for pc is "comma" -> " , "

-- Made by Gi#7331



if getgenv().Emotesbruh == true then

return end

getgenv().Emotesbruh = true



game:GetService("StarterGui"):SetCore("SendNotification",{

                Title = "Wait!",

                Text = "Please Wait, it just loading the button",

                 Duration = 15})



if game:GetService("CoreGui"):FindFirstChild("Emotes") then

    game:GetService("CoreGui"):FindFirstChild("Emotes"):Destroy()

end



wait(1)



local ContextActionService = game:GetService("ContextActionService")

local HttpService = game:GetService("HttpService")

local GuiService = game:GetService("GuiService")

local CoreGui = game:GetService("CoreGui")

local Open = Instance.new("TextButton")

UICorner = Instance.new("UICorner")

local MarketplaceService = game:GetService("MarketplaceService")

local Players = game:GetService("Players")

local StarterGui = game:GetService("StarterGui")

local UserInputService = game:GetService("UserInputService")





local LoadedEmotes, Emotes = {}, {}



local function AddEmote(name: string, id: number, price: number?)

	LoadedEmotes[id] = false

	task.spawn(function()

		if not (name and id) then return end



		local success, date = pcall(function()

			local info = MarketplaceService:GetProductInfo(id)

			local updated = info.Updated

			return DateTime.fromIsoDate(updated):ToUniversalTime()

		end)



		if not success or not date then

			task.wait(10)

			AddEmote(name, id, price)

			return

		end



		local unix = os.time({

			year = date.Year,

			month = date.Month,

			day = date.Day,

			hour = date.Hour,

			min = date.Minute,

			sec = date.Second

		})



		LoadedEmotes[id] = true



		local emoteData = {

			name = name,

			id = id,

			icon = "rbxthumb://type=Asset&id=".. id .."&w=150&h=150",

			price = price or 0,

			lastupdated = unix,

			sort = {}

		}

		table.insert(Emotes, emoteData)

	end)

end





local function CreateButtonFromEmoteInfo(emote)

	local button = Instance.new("TextButton")

	button.Name = tostring(emote.id)

	button.Text = emote.name .. " - $" .. emote.price

	button.Size = UDim2.new(0, 200, 0, 50)

	button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)

	button.TextColor3 = Color3.new(1, 1, 1)

	button.MouseButton1Click:Connect(function()

		print("Selected Emote: " .. emote.name .. ", ID: " .. emote.id)

	end)

	return button

end











local CurrentSort = "recentfirst"



local FavoriteOff = "rbxassetid://10651060677"

local FavoriteOn = "rbxassetid://10651061109"

local FavoritedEmotes = {}



local ScreenGui = Instance.new("ScreenGui")

ScreenGui.Name = "Emotes"

ScreenGui.DisplayOrder = 2

ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ScreenGui.Enabled = true



local BackFrame = Instance.new("Frame")

BackFrame.Size = UDim2.new(0.9, 0, 0.5, 0)

BackFrame.AnchorPoint = Vector2.new(0.5, 0.5)

BackFrame.Position = UDim2.new(0.5, 0, 0.5, 0)

BackFrame.SizeConstraint = Enum.SizeConstraint.RelativeYY

BackFrame.BackgroundTransparency = 1

BackFrame.BorderSizePixel = 0

BackFrame.Parent = ScreenGui



Open.Name = "Open"

Open.Parent = ScreenGui

Open.Draggable = true

Open.Size = UDim2.new(0.05,0,0.114,0)

Open.Position = UDim2.new(0.05, 0, 0.25, 0)

Open.Text = "Close"

Open.BackgroundColor3 = Color3.fromRGB(0, 0, 0)

Open.TextColor3 = Color3.fromRGB(255, 255, 255)

Open.TextScaled = true

Open.TextSize = 20

Open.Visible = true

Open.BackgroundTransparency = .5

Open.MouseButton1Up:Connect(function()

if Open.Text == "Open" then

		Open.Text = "Close"

		BackFrame.Visible = true

else

		if Open.Text == "Close" then

			Open.Text = "Open"

			BackFrame.Visible = false

		end

end

end)



UICorner.Name = "UICorner"

UICorner.Parent = Open

UICorner.CornerRadius = UDim.new(1, 0)



local EmoteName = Instance.new("TextLabel")

EmoteName.Name = "EmoteName"

EmoteName.TextScaled = true

EmoteName.AnchorPoint = Vector2.new(0.5, 0.5)

EmoteName.Position = UDim2.new(-0.1, 0, 0.5, 0)

EmoteName.Size = UDim2.new(0.2, 0, 0.2, 0)

EmoteName.SizeConstraint = Enum.SizeConstraint.RelativeYY

EmoteName.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

EmoteName.TextColor3 = Color3.new(1, 1, 1)

EmoteName.BorderSizePixel = 0

EmoteName.Parent = BackFrame



local Corner = Instance.new("UICorner")

Corner.Parent = EmoteName



local Loading = Instance.new("TextLabel", BackFrame)

Loading.AnchorPoint = Vector2.new(0.5, 0.5)

Loading.Text = "Fixing.."

Loading.TextColor3 = Color3.new(1, 1, 1)

Loading.BackgroundColor3 = Color3.new(0, 0, 0)

Loading.TextScaled = true

Loading.BackgroundTransparency = 0.5

Loading.Size = UDim2.fromScale(0.2, 0.1)

Loading.Position = UDim2.fromScale(0.5, 0.2)

Corner:Clone().Parent = Loading



local Frame = Instance.new("ScrollingFrame")

Frame.Size = UDim2.new(1, 0, 1, 0)

Frame.CanvasSize = UDim2.new(0, 0, 0, 0)

Frame.AutomaticCanvasSize = Enum.AutomaticSize.Y

Frame.ScrollingDirection = Enum.ScrollingDirection.Y

Frame.AnchorPoint = Vector2.new(0.5, 0.5)

Frame.Position = UDim2.new(0.5, 0, 0.5, 0)

Frame.BackgroundTransparency = 1

Frame.ScrollBarThickness = 5

Frame.BorderSizePixel = 0

Frame.MouseLeave:Connect(function()

	EmoteName.Text = "Select an Emote"

end)

Frame.Parent = BackFrame



local Grid = Instance.new("UIGridLayout")

Grid.CellSize = UDim2.new(0.105, 0, 0, 0)

Grid.CellPadding = UDim2.new(0.006, 0, 0.006, 0)

Grid.SortOrder = Enum.SortOrder.LayoutOrder

Grid.Parent = Frame



local SortFrame = Instance.new("Frame")

SortFrame.Visible = false

SortFrame.BorderSizePixel = 0

SortFrame.Position = UDim2.new(1, 5, -0.125, 0)

SortFrame.Size = UDim2.new(0.2, 0, 0, 0)

SortFrame.AutomaticSize = Enum.AutomaticSize.Y

SortFrame.BackgroundTransparency = 1

Corner:Clone().Parent = SortFrame

SortFrame.Parent = BackFrame



local SortList = Instance.new("UIListLayout")

SortList.Padding = UDim.new(0.02, 0)

SortList.HorizontalAlignment = Enum.HorizontalAlignment.Center

SortList.VerticalAlignment = Enum.VerticalAlignment.Top

SortList.SortOrder = Enum.SortOrder.LayoutOrder

SortList.Parent = SortFrame



local function SortEmotes()

	for i,Emote in pairs(Emotes) do

		local EmoteButton = Frame:FindFirstChild(Emote.id)

		if not EmoteButton then

			continue

		end

		local IsFavorited = table.find(FavoritedEmotes, Emote.id)

		EmoteButton.LayoutOrder = Emote.sort[CurrentSort] + ((IsFavorited and 0) or #Emotes)

		EmoteButton.number.Text = Emote.sort[CurrentSort]

	end

end



local function createsort(order, text, sort)

	local CreatedSort = Instance.new("TextButton")

	CreatedSort.SizeConstraint = Enum.SizeConstraint.RelativeXX

	CreatedSort.Size = UDim2.new(1, 0, 0.2, 0)

	CreatedSort.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

	CreatedSort.LayoutOrder = order

	CreatedSort.TextColor3 = Color3.new(1, 1, 1)

	CreatedSort.Text = text

	CreatedSort.TextScaled = true

	CreatedSort.BorderSizePixel = 0

	Corner:Clone().Parent = CreatedSort

	CreatedSort.Parent = SortFrame

	CreatedSort.MouseButton1Click:Connect(function()

		SortFrame.Visible = false

		Open.Text = "Open"

		CurrentSort = sort

		SortEmotes()

	end)

	return CreatedSort

end



createsort(1, "Recently Updated First", "recentfirst")

createsort(2, "Recently Updated Last", "recentlast")

createsort(3, "Alphabetically First", "alphabeticfirst")

createsort(4, "Alphabetically Last", "alphabeticlast")

createsort(5, "Highest Price", "highestprice")

createsort(6, "Lowest Price", "lowestprice")



local SortButton = Instance.new("TextButton")

SortButton.BorderSizePixel = 0

SortButton.AnchorPoint = Vector2.new(0.5, 0.5)

SortButton.Position = UDim2.new(0.925, -5, -0.075, 0)

SortButton.Size = UDim2.new(0.15, 0, 0.1, 0)

SortButton.TextScaled = true

SortButton.TextColor3 = Color3.new(1, 1, 1)

SortButton.BackgroundColor3 = Color3.new(0, 0, 0)

SortButton.BackgroundTransparency = 0.3

SortButton.Text = "Sort"

SortButton.MouseButton1Click:Connect(function()

	SortFrame.Visible = not SortFrame.Visible

	Open.Text = "Open"

end)

Corner:Clone().Parent = SortButton

SortButton.Parent = BackFrame



local CloseButton = Instance.new("TextButton")

CloseButton.BorderSizePixel = 0

CloseButton.AnchorPoint = Vector2.new(0.5, 0.5)

CloseButton.Position = UDim2.new(0.075, 0, -0.075, 0)

CloseButton.Size = UDim2.new(0.15, 0, 0.1, 0)

CloseButton.TextScaled = true

CloseButton.TextColor3 = Color3.new(1, 1, 1)

CloseButton.BackgroundColor3 = Color3.new(0.5, 0, 0)

CloseButton.BackgroundTransparency = 0.3

CloseButton.Text = "Kill Gui"

CloseButton.MouseButton1Click:Connect(function()

	ScreenGui:Destroy()

	getgenv().Emotesbruh = false

end)

Corner:Clone().Parent = CloseButton

CloseButton.Parent = BackFrame



local SearchBar = Instance.new("TextBox")

SearchBar.BorderSizePixel = 0

SearchBar.AnchorPoint = Vector2.new(0.5, 0.5)

SearchBar.Position = UDim2.new(0.5, 0, -0.075, 0)

SearchBar.Size = UDim2.new(0.55, 0, 0.1, 0)

SearchBar.TextScaled = true

SearchBar.PlaceholderText = "Search"

SearchBar.TextColor3 = Color3.new(1, 1, 1)

SearchBar.BackgroundColor3 = Color3.new(0, 0, 0)

SearchBar.BackgroundTransparency = 0.3

SearchBar:GetPropertyChangedSignal("Text"):Connect(function()

	local text = SearchBar.Text:lower()

	local buttons = Frame:GetChildren()

	if text ~= text:sub(1,50) then

		SearchBar.Text = SearchBar.Text:sub(1,50)

		text = SearchBar.Text:lower()

	end

	if text ~= ""  then

		for i,button in pairs(buttons) do

			if button:IsA("GuiButton") then

				local name = button:GetAttribute("name"):lower()

				if name:match(text) then

					button.Visible = true

				else

					button.Visible = false

				end

			end

		end

	else

		for i,button in pairs(buttons) do

			if button:IsA("GuiButton") then

				button.Visible = true

			end

		end

	end

end)

Corner:Clone().Parent = SearchBar

SearchBar.Parent = BackFrame



local function openemotes(name, state, input)

	if state == Enum.UserInputState.Begin then

		BackFrame.Visible = not BackFrame.Visible

		Open.Text = "Open"

	end

end



ContextActionService:BindCoreActionAtPriority(

	"Emote Menu",

	openemotes,

	true,

	2001,

	Enum.KeyCode.Comma

)



local inputconnect

ScreenGui:GetPropertyChangedSignal("Enabled"):Connect(function()

	if BackFrame.Visible == false then

		EmoteName.Text = "Select an Emote"

		SearchBar.Text = ""

		SortFrame.Visible = false

		GuiService:SetEmotesMenuOpen(false)

		inputconnect = UserInputService.InputBegan:Connect(function(input, processed)

			if not processed then

				if input.UserInputType == Enum.UserInputType.MouseButton1 then

					BackFrame.Visible = false

					Open.Text = "Open"

				end

			end

		end)

	else

		inputconnect:Disconnect()

	end

end)



GuiService.EmotesMenuOpenChanged:Connect(function(isopen)

	if isopen then

		BackFrame.Visible = false

		Open.Text = "Open"

	end

end)



GuiService.MenuOpened:Connect(function()

	BackFrame.Visible = false

	Open.Text = "Open"

end)



if not game:IsLoaded() then

	game.Loaded:Wait()

end



--thanks inf yield

local SynV3 = syn and DrawingImmediate

if (not is_sirhurt_closure) and (not SynV3) and (syn and syn.protect_gui) then

	syn.protect_gui(ScreenGui)

	ScreenGui.Parent = CoreGui

elseif get_hidden_gui or gethui then

	local hiddenUI = get_hidden_gui or gethui

	ScreenGui.Parent = hiddenUI()

else

	ScreenGui.Parent = CoreGui

end



local function SendNotification(title, text)

	if syn and syn.toast_notification then

		syn.toast_notification({

			Type = ToastType.Error,

			Title = title,

			Content = text

		})

	else

		StarterGui:SetCore("SendNotification", {

			Title = title,

			Text = text

		})

	end

end



local LocalPlayer = Players.LocalPlayer



local function PlayEmote(name: string, id: IntValue)

	BackFrame.Visible = false

	Open.Text = "Open"

	SearchBar.Text = ""

	local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")

	local Description = Humanoid and Humanoid:FindFirstChildOfClass("HumanoidDescription")

	if not Description then

		return

	end

	if LocalPlayer.Character.Humanoid.RigType ~= Enum.HumanoidRigType.R6 then

		local succ, err = pcall(function()

			Humanoid:PlayEmoteAndGetAnimTrackById(id)

		end)

		if not succ then

			Description:AddEmote(name, id)

			Humanoid:PlayEmoteAndGetAnimTrackById(id)

		end

	else

		SendNotification(

			"r6? lol",

			"you gotta be r15 dude"

		)

	end

end



local function WaitForChildOfClass(parent, class)

	local child = parent:FindFirstChildOfClass(class)

	while not child or child.ClassName ~= class do

		child = parent.ChildAdded:Wait()

	end

	return child

end

local Emotes = {

	{ name = "Around Town", id = 3576747102, icon = "rbxthumb://type=Asset&id=3576747102&w=150&h=150", price = 1000, lastupdated = 1663264200, sort = {} },

{

    name = "TWICE TAKEDOWN DANCE 2",

    id = 85623000473425,

    icon = "rbxthumb://type=Asset&id=85623000473425&w=150&h=150",

    price = 100,

    lastupdated = 1752192000,

    sort = {}

},

	{ name = "Fashionable", id = 3576745472, icon = "rbxthumb://type=Asset&id=3576745472&w=150&h=150", price = 750, lastupdated = 1663281649, sort = {} },

	{ name = "Swish", id = 3821527813, icon = "rbxthumb://type=Asset&id=3821527813&w=150&h=150", price = 750, lastupdated = 1663281651, sort = {} },

	{ name = "Top Rock", id = 3570535774, icon = "rbxthumb://type=Asset&id=3570535774&w=150&h=150", price = 750, lastupdated = 1663281651, sort = {} },

	{ name = "Fancy Feet", id = 3934988903, icon = "rbxthumb://type=Asset&id=3934988903&w=150&h=150", price = 500, lastupdated = 1663281649, sort = {} },

	{ name = "Idol", id = 4102317848, icon = "rbxthumb://type=Asset&id=4102317848&w=150&h=150", price = 500, lastupdated = 1663281650, sort = {} },

	{ name = "Sneaky", id = 3576754235, icon = "rbxthumb://type=Asset&id=3576754235&w=150&h=150", price = 500, lastupdated = 1663281651, sort = {} },

	{ name = "Elton John - Piano Jump", id = 11453096488, icon = "rbxthumb://type=Asset&id=11453096488&w=150&h=150", price = 500, lastupdated = 1668382206, sort = {} },

	{ name = "Cartwheel - George Ezra", id = 10370929905, icon = "rbxthumb://type=Asset&id=10370929905&w=150&h=150", price = 450, lastupdated = 1659650848, sort = {} },

	{ name = "Super Charge", id = 10478368365, icon = "rbxthumb://type=Asset&id=10478368365&w=150&h=150", price = 450, lastupdated = 1659649594, sort = {} },

	{ name = "Rise Above - The Chainsmokers", id = 13071993910, icon = "rbxthumb://type=Asset&id=13071993910&w=150&h=150", price = 400, lastupdated = 1681411386, sort = {} },

	{ name = "Elton John - Elevate", id = 11394056822, icon = "rbxthumb://type=Asset&id=11394056822&w=150&h=150", price = 400, lastupdated = 1667432393, sort = {} },

	{ name = "Sturdy Dance - Ice Spice", id = 17746270218, icon = "rbxthumb://type=Asset&id=17746270218&w=150&h=150", price = 300, lastupdated = 1717619314, sort = {} },

	{ name = "YUNGBLUD – HIGH KICK", id = 14022978026, icon = "rbxthumb://type=Asset&id=14022978026&w=150&h=150", price = 300, lastupdated = 1691769382, sort = {} },

	{ name = "Robot", id = 3576721660, icon = "rbxthumb://type=Asset&id=3576721660&w=150&h=150", price = 250, lastupdated = 1663281650, sort = {} },

	{ name = "Louder", id = 3576751796, icon = "rbxthumb://type=Asset&id=3576751796&w=150&h=150", price = 250, lastupdated = 1663281650, sort = {} },

	{ name = "Twirl", id = 3716633898, icon = "rbxthumb://type=Asset&id=3716633898&w=150&h=150", price = 250, lastupdated = 1663281651, sort = {} },

	{ name = "Bodybuilder", id = 3994130516, icon = "rbxthumb://type=Asset&id=3994130516&w=150&h=150", price = 200, lastupdated = 1663281649, sort = {} },

	{ name = "NBA Monster Dunk", id = 117511481049460, icon = "rbxthumb://type=Asset&id=117511481049460&w=150&h=150", price = 200, lastupdated = 1739396302, sort = {} },

	{ name = "Jacks", id = 3570649048, icon = "rbxthumb://type=Asset&id=3570649048&w=150&h=150", price = 200, lastupdated = 1663281650, sort = {} },

	{ name = "Shuffle", id = 4391208058, icon = "rbxthumb://type=Asset&id=4391208058&w=150&h=150", price = 200, lastupdated = 1663281651, sort = {} },

	{ name = "Elton John - Still Standing", id = 11435177473, icon = "rbxthumb://type=Asset&id=11435177473&w=150&h=150", price = 200, lastupdated = 1667779047, sort = {} },

	{ name = "Elton John - Cat Man", id = 11435175895, icon = "rbxthumb://type=Asset&id=11435175895&w=150&h=150", price = 200, lastupdated = 1667535727, sort = {} },

	{ name = "Shrek Roar", id = 18524331128, icon = "rbxthumb://type=Asset&id=18524331128&w=150&h=150", price = 200, lastupdated = 1721176055, sort = {} },

	{ name = "Dorky Dance", id = 4212499637, icon = "rbxthumb://type=Asset&id=4212499637&w=150&h=150", price = 200, lastupdated = 1663281649, sort = {} },

	{ name = "HOLIDAY Dance - Lil Nas X (LNX)", id = 5938396308, icon = "rbxthumb://type=Asset&id=5938396308&w=150&h=150", price = 190, lastupdated = 1663281650, sort = {} },

	{ name = "Old Town Road Dance - Lil Nas X (LNX)", id = 5938394742, icon = "rbxthumb://type=Asset&id=5938394742&w=150&h=150", price = 190, lastupdated = 1663281650, sort = {} },

	{ name = "Panini Dance - Lil Nas X (LNX)", id = 5915781665, icon = "rbxthumb://type=Asset&id=5915781665&w=150&h=150", price = 190, lastupdated = 1663281650, sort = {} },

	{ name = "Rodeo Dance - Lil Nas X (LNX)", id = 5938397555, icon = "rbxthumb://type=Asset&id=5938397555&w=150&h=150", price = 190, lastupdated = 1663281651, sort = {} },

	{ name = "Drum Master - Royal Blood", id = 6531538868, icon = "rbxthumb://type=Asset&id=6531538868&w=150&h=150", price = 190, lastupdated = 1663281649, sort = {} },

	{ name = "It Ain't My Fault - Zara Larsson", id = 6797948622, icon = "rbxthumb://type=Asset&id=6797948622&w=150&h=150", price = 190, lastupdated = 1663281650, sort = {} },

	{ name = "Flex Walk", id = 15506506103, icon = "rbxthumb://type=Asset&id=15506506103&w=150&h=150", price = 175, lastupdated = 1705451683, sort = {} },

	{ name = "Dizzy", id = 3934986896, icon = "rbxthumb://type=Asset&id=3934986896&w=150&h=150", price = 175, lastupdated = 1663281649, sort = {} },

	{ name = "Uprise - Tommy Hilfiger", id = 10275057230, icon = "rbxthumb://type=Asset&id=10275057230&w=150&h=150", price = 170, lastupdated = 1660240736, sort = {} },

	{ name = "Tommy - Archer", id = 13823339506, icon = "rbxthumb://type=Asset&id=13823339506&w=150&h=150", price = 170, lastupdated = 1687980934, sort = {} },

	{ name = "Mean Mug - Tommy Hilfiger", id = 10214415687, icon = "rbxthumb://type=Asset&id=10214415687&w=150&h=150", price = 170, lastupdated = 1660240753, sort = {} },

	{ name = "Rock Star - Royal Blood", id = 6533100850, icon = "rbxthumb://type=Asset&id=6533100850&w=150&h=150", price = 170, lastupdated = 1663281651, sort = {} },

	{ name = "Floor Rock Freeze - Tommy Hilfiger", id = 10214411646, icon = "rbxthumb://type=Asset&id=10214411646&w=150&h=150", price = 170, lastupdated = 1658271615, sort = {} },

	{ name = "Saturday Dance - Twenty One Pilots", id = 7422833723, icon = "rbxthumb://type=Asset&id=7422833723&w=150&h=150", price = 170, lastupdated = 1663281651, sort = {} },

	{ name = "V Pose - Tommy Hilfiger", id = 10214418283, icon = "rbxthumb://type=Asset&id=10214418283&w=150&h=150", price = 170, lastupdated = 1660240743, sort = {} },

	{ name = "Boxing Punch - KSI", id = 7202896732, icon = "rbxthumb://type=Asset&id=7202896732&w=150&h=150", price = 170, lastupdated = 1663281649, sort = {} },

	{ name = "Drum Solo - Royal Blood", id = 6532844183, icon = "rbxthumb://type=Asset&id=6532844183&w=150&h=150", price = 170, lastupdated = 1663281649, sort = {} },

	{ name = "Frosty Flair - Tommy Hilfiger", id = 10214406616, icon = "rbxthumb://type=Asset&id=10214406616&w=150&h=150", price = 170, lastupdated = 1658271594, sort = {} },

	{ name = "Hips Poppin' - Zara Larsson", id = 6797919579, icon = "rbxthumb://type=Asset&id=6797919579&w=150&h=150", price = 170, lastupdated = 1663281650, sort = {} },

	{ name = "Drummer Moves - Twenty One Pilots", id = 82250025202656, icon = "rbxthumb://type=Asset&id=7422838770
