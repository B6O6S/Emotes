-- Emote GUI with Thumbnails, Shortcuts, Draggable & Scrollable Menu
-- Place in StarterPlayer -> StarterPlayerScripts as a LocalScript

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local UIS = game:GetService("UserInputService")

local emotes = {
    {id = 113855231967763, name = "Take The L"},
    {id = 82250025202656, name = "Can I Join?"},
    {id = 101397505086633, name = "Lonely Lonely"},
    {id = 89114994401113, name = "Rampage"},
    {id = 14353423348, name = "Wall Glitch"},
    {id = 15610015346, name = "Speed Glitch"},
    {id = 132950274861655, name = "Worm Dance"},
    {id = 93738573538058, name = "Push Up"},
    {id = 92237689732858, name = "Stomp"},
    {id = 79414723643986, name = "Toxic Laugh"},
    {id = 85488100591241, name = "Gangam Style"},
    {id = 99326825873329, name = "Tidy"},
    {id = 71210290786350, name = "Rollie"},
    {id = 120302905807132, name = "Sturdy"},
    {id = 126045725877316, name = "Rambunctious"},
    {id = 90490270360367, name = "Side shuffle"},
    {id = 102699471013529, name = "Signature shuffle"},
    {id = 139890185302092, name = "Siuu"},
    {id = 79127989560307, name = "Moon walk"}
    {id = 92032361108643, name = "Homero dance"}
}

local shortcuts = {}

local function playEmoteById(assetId)
    local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    local success = pcall(function()
        humanoid:PlayEmoteAndGetAnimTrackById(assetId)
    end)

    if not success then
        local desc = humanoid:FindFirstChildOfClass("HumanoidDescription")
        if desc then
            desc:AddEmote("Custom", assetId)
            humanoid:PlayEmoteAndGetAnimTrackById(assetId)
        else
            warn("HumanoidDescription not found.")
        end
    end
end

local function makeDraggable(gui)
    local dragging, dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        gui.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end

    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "EmoteMenu"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 320, 0, 300)  -- Smaller fixed size
mainFrame.Position = UDim2.new(0.5, -160, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
mainFrame.Active = true
mainFrame.Visible = false
mainFrame.Parent = screenGui
makeDraggable(mainFrame)

-- Scrolling frame inside mainFrame for emotes
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -10, 1, -20)
scrollFrame.Position = UDim2.new(0, 5, 0, 15)
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, (#emotes * 55)) -- total height of all buttons
scrollFrame.ScrollBarThickness = 6
scrollFrame.BackgroundTransparency = 1
scrollFrame.Parent = mainFrame

-- UIListLayout for automatic vertical layout
local layout = Instance.new("UIListLayout")
layout.Padding = UDim.new(0, 5)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Parent = scrollFrame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 100, 0, 40)
toggleBtn.Position = UDim2.new(0, 10, 0, 10)
toggleBtn.Text = "Emotes"
toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Parent = screenGui

toggleBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
end)

local function toggleShortcut(emote)
    if shortcuts[emote.id] then
        shortcuts[emote.id]:Destroy()
        shortcuts[emote.id] = nil
        return
    end

    local shortcutBtn = Instance.new("TextButton")
    shortcutBtn.Size = UDim2.new(0, 80, 0, 30)
    shortcutBtn.Position = UDim2.new(1, -90, 0, 10 + (#shortcuts * 40))
    shortcutBtn.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    shortcutBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    shortcutBtn.TextScaled = true
    shortcutBtn.Text = emote.name
    shortcutBtn.Parent = screenGui

    makeDraggable(shortcutBtn)

    shortcutBtn.MouseButton1Click:Connect(function()
        playEmoteById(emote.id)
    end)

    shortcuts[emote.id] = shortcutBtn
end

for _, emote in ipairs(emotes) do
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 50)
    container.BackgroundTransparency = 1
    container.Parent = scrollFrame

    local thumb = Instance.new("ImageLabel")
    thumb.Size = UDim2.new(0, 50, 0, 50)
    thumb.Position = UDim2.new(0, 0, 0, 0)
    thumb.BackgroundTransparency = 1
    thumb.Image = "rbxthumb://type=Asset&id=" .. emote.id .. "&w=150&h=150"
    thumb.Parent = container

    local playBtn = Instance.new("TextButton")
    playBtn.Size = UDim2.new(0.6, -60, 1, 0)
    playBtn.Position = UDim2.new(0, 55, 0, 0)
    playBtn.Text = emote.name
    playBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    playBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    playBtn.TextScaled = true
    playBtn.Parent = container

    local shortcutBtn = Instance.new("TextButton")
    shortcutBtn.Size = UDim2.new(0.4, -5, 1, 0)
    shortcutBtn.Position = UDim2.new(0.6, 55, 0, 0)
    shortcutBtn.Text = "+"
    shortcutBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    shortcutBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    shortcutBtn.TextScaled = true
    shortcutBtn.Parent = container

    playBtn.MouseButton1Click:Connect(function()
        playEmoteById(emote.id)
    end)

    shortcutBtn.MouseButton1Click:Connect(function()
        toggleShortcut(emote)
    end)
end
